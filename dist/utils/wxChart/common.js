'use strict';

/**
 * Created by ChenChao on 2017/1/4.
 */

module.exports = {
    bezierLine: function bezierLine(option) {
        if (option.hide) {
            return;
        }
        var that = this;
        var ctx = this.ctx;
        var canvasHeight = this.canvasHeight;
        var canvasWidth = this.canvasWidth;
        var scaleX = option.scaleX || 1;
        var scaleY = option.scaleY || 1;
        var offsetX = canvasWidth * (1 - scaleX) - this.paddingRight;
        var offsetY = canvasHeight * (1 - scaleY) - this.paddingBottom;
        var step = canvasWidth / (option.xAxis.data.length - 1);
        var areaW = canvasWidth - this.paddingLeft - this.paddingRight;
        var areaH = canvasHeight - this.paddingTop - this.paddingBottom;
        var maxData = Math.max.apply(null, option.data);
        var minData = Math.min.apply(null, option.data);
        var areaUnit = areaH / (maxData - minData);
        var data = [];
        option.xAxis.data.map(function (item, index) {
            data.push([index * step, Math.abs(option.data[index] - maxData) * areaUnit + that.paddingTop + that.paddingBottom]);
        });
        data.unshift(data[0]);
        data.push(data[data.length - 1]);

        //ctx.scale(scaleX, scaleY);
        //ctx.translate(offsetX, offsetY);
        ctx.beginPath();
        data.map(function (item, index) {
            var a = 0.25;
            var b = 0.25;
            if (index == 0 || index == data.length - 1) {
                //
            } else if (index == 1) {
                ctx.moveTo(item[0], item[1]);
            } else {
                var a1 = data[index - 1][0] + a * (data[index][0] - data[index - 2][0]);
                var a2 = data[index - 1][1] + b * (data[index][1] - data[index - 2][1]);
                var b1 = data[index][0] - b * (data[index + 1][0] - data[index - 1][0]);
                var b2 = data[index][1] - b * (data[index + 1][1] - data[index - 1][1]);
                ctx.bezierCurveTo(a1, a2, b1, b2, item[0], item[1]);
            }
        });

        ctx.setLineWidth(1);
        ctx.setStrokeStyle(option.lineColor);
        ctx.stroke();
        //ctx.translate(-offsetX, -offsetY);
        //ctx.scale(1 / scaleX, 1 / scaleY);
    },
    candleBak: function candleBak(ctx, cx, cy, option) {
        var color = option.down ? '#1EBB54' : '#E22723';
        var w = option.width;
        var h = option.height;
        //画影线
        ctx.setFillStyle(color);
        ctx.fillRect(cx + w / 2 - 1, cy - h / 2, 2, 2 * h);
        //画实体
        if (option.down) {
            ctx.setFillStyle(color);
            ctx.fillRect(cx, cy, w, h);
        } else {
            ctx.setLineWidth(2);
            ctx.setStrokeStyle(color);
            ctx.strokeRect(cx, cy, w, h);
            ctx.setFillStyle('white');
            ctx.fillRect(cx, cy, w, h);
        }
    },
    candle: function candle(ctx, cx, w, h, l, s, c, isUp, max, min, areaH) {
        var color = isUp ? '#ff2f2f' : '#4cda64';
        var ds = 1;

        //真实坐标计算
        h = areaH - areaH * Math.abs(h - min) / (max - min);
        l = areaH - areaH * Math.abs(l - min) / (max - min);
        s = areaH - areaH * Math.abs(s - min) / (max - min);
        c = areaH - areaH * Math.abs(c - min) / (max - min);

        //画影线
        var lineH = Math.abs(h - l);
        ctx.setFillStyle(color);
        ctx.fillRect(cx + w / 2 + ds - 1 + (isUp ? 0.5 : 0), lineH == 0 ? h + 1 : h, 1, lineH || 1);

        //画实体
        var barH = Math.abs(c - s);
        if (isUp) {
            if (barH == 0) {
                ctx.setFillStyle(color);
                ctx.fillRect(cx + ds, c + 1, w - ds, 1);
            } else {
                ctx.setLineWidth(1);
                ctx.setStrokeStyle(color);
                ctx.strokeRect(cx + ds + 1, c + 1, w - ds - 1, barH - 1);
                ctx.setFillStyle('#1c1f27');
                ctx.fillRect(cx + ds + 1, c + 1, w - ds - 1, barH - 1);
            }
        } else {
            ctx.setFillStyle(color);
            ctx.fillRect(cx + ds, barH == 0 ? s + 1 : s, w - ds, barH || 1);
        }
    },
    disRepArr: function disRepArr(array) {
        var hash = {},
            len = array.length,
            result = [];

        for (var i = 0; i < len; i++) {
            if (!hash[array[i]]) {
                hash[array[i]] = true;
                result.push(array[i]);
            }
        }
        return result;
    },
    metaUnit: function metaUnit(value) {
        if (value > 99999999) {
            return (value / 100000000).toFixed(2) + '亿';
        }
        if (value > 9999) {
            return (value / 10000).toFixed(2) + '万';
        }
        return value.toFixed(2);
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYmV6aWVyTGluZSIsIm9wdGlvbiIsImhpZGUiLCJ0aGF0IiwiY3R4IiwiY2FudmFzSGVpZ2h0IiwiY2FudmFzV2lkdGgiLCJzY2FsZVgiLCJzY2FsZVkiLCJvZmZzZXRYIiwicGFkZGluZ1JpZ2h0Iiwib2Zmc2V0WSIsInBhZGRpbmdCb3R0b20iLCJzdGVwIiwieEF4aXMiLCJkYXRhIiwibGVuZ3RoIiwiYXJlYVciLCJwYWRkaW5nTGVmdCIsImFyZWFIIiwicGFkZGluZ1RvcCIsIm1heERhdGEiLCJNYXRoIiwibWF4IiwiYXBwbHkiLCJtaW5EYXRhIiwibWluIiwiYXJlYVVuaXQiLCJtYXAiLCJpdGVtIiwiaW5kZXgiLCJwdXNoIiwiYWJzIiwidW5zaGlmdCIsImJlZ2luUGF0aCIsImEiLCJiIiwibW92ZVRvIiwiYTEiLCJhMiIsImIxIiwiYjIiLCJiZXppZXJDdXJ2ZVRvIiwic2V0TGluZVdpZHRoIiwic2V0U3Ryb2tlU3R5bGUiLCJsaW5lQ29sb3IiLCJzdHJva2UiLCJjYW5kbGVCYWsiLCJjeCIsImN5IiwiY29sb3IiLCJkb3duIiwidyIsIndpZHRoIiwiaCIsImhlaWdodCIsInNldEZpbGxTdHlsZSIsImZpbGxSZWN0Iiwic3Ryb2tlUmVjdCIsImNhbmRsZSIsImwiLCJzIiwiYyIsImlzVXAiLCJkcyIsImxpbmVIIiwiYmFySCIsImRpc1JlcEFyciIsImFycmF5IiwiaGFzaCIsImxlbiIsInJlc3VsdCIsImkiLCJtZXRhVW5pdCIsInZhbHVlIiwidG9GaXhlZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUlBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2JDLGdCQUFZLG9CQUFVQyxNQUFWLEVBQWtCO0FBQzFCLFlBQUdBLE9BQU9DLElBQVYsRUFBZTtBQUNYO0FBQ0g7QUFDRCxZQUFJQyxPQUFPLElBQVg7QUFDQSxZQUFJQyxNQUFNLEtBQUtBLEdBQWY7QUFDQSxZQUFJQyxlQUFl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SUYsR0FBcEIsRUFBeUJFLEdBQXpCLEVBQTZCO0FBQ3pCLGdCQUFJLENBQUNILEtBQUtELE1BQU1JLENBQU4sQ0FBTCxDQUFMLEVBQW9CO0FBQ2hCSCxxQkFBS0QsTUFBTUksQ0FBTixDQUFMLElBQWlCLElBQWpCO0FBQ0FELHVCQUFPeEMsSUFBUCxDQUFZcUMsTUFBTUksQ0FBTixDQUFaO0FBQ0g7QUFDSjtBQUNELGVBQU9ELE1BQVA7QUFDSCxLQW5IWTtBQW9IYkUsY0FBVSxrQkFBVUMsS0FBVixFQUFpQjtBQUN2QixZQUFHQSxRQUFRLFFBQVgsRUFBb0I7QUFDaEIsbUJBQU8sQ0FBQ0EsUUFBUSxTQUFULEVBQW9CQyxPQUFwQixDQUE0QixDQUE1QixJQUFpQyxHQUF4QztBQUNIO0FBQ0QsWUFBR0QsUUFBUSxJQUFYLEVBQWdCO0FBQ1osbUJBQU8sQ0FBQ0EsUUFBUSxLQUFULEVBQWdCQyxPQUFoQixDQUF3QixDQUF4QixJQUE2QixHQUFwQztBQUNIO0FBQ0QsZUFBT0QsTUFBTUMsT0FBTixDQUFjLENBQWQsQ0FBUDtBQUNIO0FBNUhZLENBQWpCIiwiZmlsZSI6ImNvbW1vbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBDaGVuQ2hhbyBvbiAyMDE3LzEvNC5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBiZXppZXJMaW5lOiBmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgIGlmKG9wdGlvbi5oaWRlKXtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgIHZhciBjdHggPSB0aGlzLmN0eDtcbiAgICAgICAgdmFyIGNhbnZhc0hlaWdodCA9IHRoaXMuY2FudmFzSGVpZ2h0O1xuICAgICAgICB2YXIgY2FudmFzV2lkdGggPSB0aGlzLmNhbnZhc1dpZHRoO1xuICAgICAgICB2YXIgc2NhbGVYID0gb3B0aW9uLnNjYWxlWCB8fCAxO1xuICAgICAgICB2YXIgc2NhbGVZID0gb3B0aW9uLnNjYWxlWSB8fCAxO1xuICAgICAgICB2YXIgb2Zmc2V0WCA9IGNhbnZhc1dpZHRoICogKDEgLSBzY2FsZVgpIC0gdGhpcy5wYWRkaW5nUmlnaHQ7XG4gICAgICAgIHZhciBvZmZzZXRZID0gY2FudmFzSGVpZ2h0ICogKDEgLSBzY2FsZVkpIC0gdGhpcy5wYWRkaW5nQm90dG9tO1xuICAgICAgICB2YXIgc3RlcCA9IGNhbnZhc1dpZHRoIC8gKG9wdGlvbi54QXhpcy5kYXRhLmxlbmd0aCAtIDEpO1xuICAgICAgICB2YXIgYXJlYVcgPSBjYW52YXNXaWR0aCAtIHRoaXMucGFkZGluZ0xlZnQgLSB0aGlzLnBhZGRpbmdSaWdodDtcbiAgICAgICAgdmFyIGFyZWFIID0gY2FudmFzSGVpZ2h0IC0gdGhpcy5wYWRkaW5nVG9wIC0gdGhpcy5wYWRkaW5nQm90dG9tO1xuICAgICAgICB2YXIgbWF4RGF0YSA9IE1hdGgubWF4LmFwcGx5KG51bGwsIG9wdGlvbi5kYXRhKTtcbiAgICAgICAgdmFyIG1pbkRhdGEgPSBNYXRoLm1pbi5hcHBseShudWxsLCBvcHRpb24uZGF0YSk7XG4gICAgICAgIHZhciBhcmVhVW5pdCA9IGFyZWFIIC8gKG1heERhdGEgLSBtaW5EYXRhKTtcbiAgICAgICAgdmFyIGRhdGEgPSBbXTtcbiAgICAgICAgb3B0aW9uLnhBeGlzLmRhdGEubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgICAgICAgZGF0YS5wdXNoKFtpbmRleCAqIHN0ZXAsIE1hdGguYWJzKG9wdGlvbi5kYXRhW2luZGV4XSAtIG1heERhdGEpICogYXJlYVVuaXQgKyB0aGF0LnBhZGRpbmdUb3AgKyB0aGF0LnBhZGRpbmdCb3R0b21dKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGRhdGEudW5zaGlmdChkYXRhWzBdKTtcbiAgICAgICAgZGF0YS5wdXNoKGRhdGFbZGF0YS5sZW5ndGggLSAxXSk7XG5cbiAgICAgICAgLy9jdHguc2NhbGUoc2NhbGVYLCBzY2FsZVkpO1xuICAgICAgICAvL2N0eC50cmFuc2xhdGUob2Zmc2V0WCwgb2Zmc2V0WSk7XG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgZGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICAgICAgICB2YXIgYSA9IDAuMjU7XG4gICAgICAgICAgICB2YXIgYiA9IDAuMjU7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gMCB8fCBpbmRleCA9PSBkYXRhLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgfSBlbHNlIGlmIChpbmRleCA9PSAxKSB7XG4gICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyhpdGVtWzBdLCBpdGVtWzFdKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIGExID0gZGF0YVtpbmRleCAtIDFdWzBdICsgYSAqIChkYXRhW2luZGV4XVswXSAtIGRhdGFbaW5kZXggLSAyXVswXSk7XG4gICAgICAgICAgICAgICAgdmFyIGEyID0gZGF0YVtpbmRleCAtIDFdWzFdICsgYiAqIChkYXRhW2luZGV4XVsxXSAtIGRhdGFbaW5kZXggLSAyXVsxXSk7XG4gICAgICAgICAgICAgICAgdmFyIGIxID0gZGF0YVtpbmRleF1bMF0gLSBiICogKGRhdGFbaW5kZXggKyAxXVswXSAtIGRhdGFbaW5kZXggLSAxXVswXSk7XG4gICAgICAgICAgICAgICAgdmFyIGIyID0gZGF0YVtpbmRleF1bMV0gLSBiICogKGRhdGFbaW5kZXggKyAxXVsxXSAtIGRhdGFbaW5kZXggLSAxXVsxXSk7XG4gICAgICAgICAgICAgICAgY3R4LmJlemllckN1cnZlVG8oYTEsIGEyLCBiMSwgYjIsIGl0ZW1bMF0sIGl0ZW1bMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBjdHguc2V0TGluZVdpZHRoKDEpO1xuICAgICAgICBjdHguc2V0U3Ryb2tlU3R5bGUob3B0aW9uLmxpbmVDb2xvcik7XG4gICAgICAgIGN0eC5zdHJva2UoKTtcbiAgICAgICAgLy9jdHgudHJhbnNsYXRlKC1vZmZzZXRYLCAtb2Zmc2V0WSk7XG4gICAgICAgIC8vY3R4LnNjYWxlKDEgLyBzY2FsZVgsIDEgLyBzY2FsZVkpO1xuICAgIH0sXG4gICAgY2FuZGxlQmFrOiBmdW5jdGlvbiAoY3R4LCBjeCwgY3ksIG9wdGlvbikge1xuICAgICAgICB2YXIgY29sb3IgPSBvcHRpb24uZG93biA/ICcjMUVCQjU0JyA6ICcjRTIyNzIzJztcbiAgICAgICAgdmFyIHcgPSBvcHRpb24ud2lkdGg7XG4gICAgICAgIHZhciBoID0gb3B0aW9uLmhlaWdodDtcbiAgICAgICAgLy/nlLvlvbHnur9cbiAgICAgICAgY3R4LnNldEZpbGxTdHlsZShjb2xvcik7XG4gICAgICAgIGN0eC5maWxsUmVjdChjeCArIHcvMiAtIDEsIGN5IC0gaC8yLCAyLCAyKmgpO1xuICAgICAgICAvL+eUu+WunuS9k1xuICAgICAgICBpZihvcHRpb24uZG93bil7XG4gICAgICAgICAgICBjdHguc2V0RmlsbFN0eWxlKGNvbG9yKTtcbiAgICAgICAgICAgIGN0eC5maWxsUmVjdChjeCwgY3ksIHcsIGgpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGN0eC5zZXRMaW5lV2lkdGgoMik7XG4gICAgICAgICAgICBjdHguc2V0U3Ryb2tlU3R5bGUoY29sb3IpO1xuICAgICAgICAgICAgY3R4LnN0cm9rZVJlY3QoY3gsIGN5LCB3LCBoKTtcbiAgICAgICAgICAgIGN0eC5zZXRGaWxsU3R5bGUoJ3doaXRlJyk7XG4gICAgICAgICAgICBjdHguZmlsbFJlY3QoY3gsIGN5LCB3LCBoKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgY2FuZGxlOiBmdW5jdGlvbiAoY3R4LCBjeCwgdywgaCwgbCwgcywgYywgaXNVcCwgbWF4LCBtaW4sIGFyZWFIKSB7XG4gICAgICAgIHZhciBjb2xvciA9IGlzVXAgPyAnI2ZmMmYyZic6ICcjNGNkYTY0JztcbiAgICAgICAgdmFyIGRzID0gMTtcblxuICAgICAgICAvL+ecn+WunuWdkOagh+iuoeeul1xuICAgICAgICBoID0gYXJlYUggLSAoYXJlYUggKiBNYXRoLmFicyhoIC0gbWluKSAvIChtYXggLSBtaW4pKTtcbiAgICAgICAgbCA9IGFyZWFIIC0gKGFyZWFIICogTWF0aC5hYnMobCAtIG1pbikgLyAobWF4IC0gbWluKSk7XG4gICAgICAgIHMgPSBhcmVhSCAtIChhcmVhSCAqIE1hdGguYWJzKHMgLSBtaW4pIC8gKG1heCAtIG1pbikpO1xuICAgICAgICBjID0gYXJlYUggLSAoYXJlYUggKiBNYXRoLmFicyhjIC0gbWluKSAvIChtYXggLSBtaW4pKTtcblxuICAgICAgICAvL+eUu+W9see6v1xuICAgICAgICB2YXIgbGluZUggPSBNYXRoLmFicyhoIC0gbCk7XG4gICAgICAgIGN0eC5zZXRGaWxsU3R5bGUoY29sb3IpO1xuICAgICAgICBjdHguZmlsbFJlY3QoY3ggKyB3LzIgKyBkcyAtIDEgKyAoaXNVcCA/IDAuNSA6IDApLCBsaW5lSCA9PSAwID8gaCArIDEgOiBoLCAxLCBsaW5lSCB8fCAxKTtcblxuICAgICAgICAvL+eUu+WunuS9k1xuICAgICAgICB2YXIgYmFySCA9IE1hdGguYWJzKGMgLSBzKTtcbiAgICAgICAgaWYoaXNVcCl7XG4gICAgICAgICAgICBpZihiYXJIID09IDApe1xuICAgICAgICAgICAgICAgIGN0eC5zZXRGaWxsU3R5bGUoY29sb3IpO1xuICAgICAgICAgICAgICAgIGN0eC5maWxsUmVjdChjeCArIGRzLCBjICsgMSwgdyAtIGRzLCAxKTtcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIGN0eC5zZXRMaW5lV2lkdGgoMSk7XG4gICAgICAgICAgICAgICAgY3R4LnNldFN0cm9rZVN0eWxlKGNvbG9yKTtcbiAgICAgICAgICAgICAgICBjdHguc3Ryb2tlUmVjdChjeCArIGRzICsgMSwgYyArIDEsIHcgLSBkcyAtIDEsIGJhckggLSAxKTtcbiAgICAgICAgICAgICAgICBjdHguc2V0RmlsbFN0eWxlKCcjMWMxZjI3Jyk7XG4gICAgICAgICAgICAgICAgY3R4LmZpbGxSZWN0KGN4ICsgZHMgKyAxLCBjICsgMSwgdyAtIGRzIC0gMSwgYmFySCAtIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGN0eC5zZXRGaWxsU3R5bGUoY29sb3IpO1xuICAgICAgICAgICAgY3R4LmZpbGxSZWN0KGN4ICsgZHMsIGJhckggPT0gMCA/IHMgKyAxIDogcywgdyAtIGRzLCBiYXJIIHx8IDEpO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBkaXNSZXBBcnI6IGZ1bmN0aW9uIChhcnJheSkge1xuICAgICAgICB2YXIgaGFzaCA9IHt9LFxuICAgICAgICAgICAgbGVuID0gYXJyYXkubGVuZ3RoLFxuICAgICAgICAgICAgcmVzdWx0ID0gW107XG4gICAgXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspe1xuICAgICAgICAgICAgaWYgKCFoYXNoW2FycmF5W2ldXSl7XG4gICAgICAgICAgICAgICAgaGFzaFthcnJheVtpXV0gPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGFycmF5W2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gICAgbWV0YVVuaXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZih2YWx1ZSA+IDk5OTk5OTk5KXtcbiAgICAgICAgICAgIHJldHVybiAodmFsdWUgLyAxMDAwMDAwMDApLnRvRml4ZWQoMikgKyAn5Lq/JztcbiAgICAgICAgfVxuICAgICAgICBpZih2YWx1ZSA+IDk5OTkpe1xuICAgICAgICAgICAgcmV0dXJuICh2YWx1ZSAvIDEwMDAwKS50b0ZpeGVkKDIpICsgJ+S4hyc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlLnRvRml4ZWQoMik7XG4gICAgfVxufTsiXX0=